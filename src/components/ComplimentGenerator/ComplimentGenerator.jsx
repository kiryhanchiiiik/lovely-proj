import { useState } from "react";
import Button from "../Button/Button";
import Card from "../Card/Card";
import CardContent from "../CardContent/CardContent";
import { useNavigate } from "react-router-dom";
import css from "./ComplimentGenerator.module.css";

const compliments = [
  "–°–æ–Ω—è—à–Ω–∏–∫, —Ç—ã ‚Äî –∏—Å—Ç–æ—á–Ω–∏–∫ —Å–≤–µ—Ç–∞ –∏ —Ç–µ–ø–ª–∞ –≤ —ç—Ç–æ–º –º–∏—Ä–µ! ‚ù§",
  "–¢–≤–æ—è –¥–æ–±—Ä–æ—Ç–∞ –∏ –Ω–µ–∂–Ω–æ—Å—Ç—å —Å–ø–æ—Å–æ–±–Ω—ã —Ä–∞—Å—Ç–æ–ø–∏—Ç—å –ª—é–±–æ–µ —Å–µ—Ä–¥—Ü–µ! ü§ç",
  "–° —Ç–æ–±–æ–π –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –≥–∞—Ä–º–æ–Ω–∏–µ–π –∏ —Ä–∞–¥–æ—Å—Ç—å—é! üíï",
  "–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∏ —É–ª—ã–±–∫–∞ –¥–µ–ª–∞—é—Ç —ç—Ç–æ—Ç –º–∏—Ä —è—Ä—á–µ –∏ —Ç–µ–ø–ª–µ–µ! üíã",
  "–¢—ã –∫–∞–∫ –∑–≤–µ–∑–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –æ–∑–∞—Ä—è–µ—Ç –¥–∞–∂–µ —Å–∞–º—ã–µ —Ç—ë–º–Ω—ã–µ –Ω–æ—á–∏! üíñ",
  "–í —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ü–µ–ª—ã–µ –≤—Å–µ–ª–µ–Ω–Ω—ã–µ! üåπ",
  "–¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∞—Å–∏–≤–∞—è, —Ç—ã ‚Äî –Ω–∞—Å—Ç–æ—è—â–∏–π –≤–æ–ø–ª–æ—â—ë–Ω–Ω—ã–π –∏–¥–µ–∞–ª –∫—Ä–∞—Å–æ—Ç—ã –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–∏–ª—ã! ü•∞",
  "–¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ —É–º–Ω–∞—è, —Ç—ã —É–º–µ–µ—à—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –Ω–∞ –≤–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞. üòõ",
  "–¢–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî —ç—Ç–æ –ª—É—á—à–µ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –æ—Ç –ª—é–±–æ–≥–æ –ø–ª–æ—Ö–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è. üòª",
  "–¢—ã ‚Äî –ø—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, –∫–∞–∫ –º–æ–∂–Ω–æ —Å–æ—á–µ—Ç–∞—Ç—å –¥–æ–±—Ä–æ—Ç—É, —É–º –∏ –∫—Ä–∞—Å–æ—Ç—É –≤ –æ–¥–Ω–æ–º —á–µ–ª–æ–≤–µ–∫–µ. üòç",
];

const ComplimentGenerator = () => {
  const [compliment, setCompliment] = useState("–°–æ–Ω—å, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É üòò");
  const [complimentIndex, setComplimentIndex] = useState(0);
  const [finished, setFinished] = useState(false);
  const [showFinalButton, setShowFinalButton] = useState(false);
  const navigate = useNavigate();

  const generateCompliment = () => {
    if (complimentIndex < compliments.length - 1) {
      setCompliment(compliments[complimentIndex + 1]);
      setComplimentIndex(complimentIndex + 1);
    } else {
      setCompliment("–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!");
      setShowFinalButton(true);
      setFinished(true);
    }
  };

  const goToBestCompliment = () => {
    navigate("/best");
  };

  return (
    <div className={css.relative}>
      <img
        className={css.heart1}
        width="50"
        height="50"
        src="../../../public/heart.svg"
        alt=""
      />
      <img
        className={css.heart2}
        width="57"
        height="57"
        src="../../../public/heart-2.svg"
        alt=""
      />
      <img
        className={css.heart3}
        width="57"
        height="57"
        src="../../../public/heart-3.svg"
        alt=""
      />
      <img
        className={css.heart4}
        width="50"
        height="50"
        src="../../../public/heart-4.svg"
        alt=""
      />
      <Card>
        <CardContent>
          <p className="text-lg font-semibold text-gray-800">{compliment}</p>
        </CardContent>
      </Card>
      {!finished && (
        <Button onClick={generateCompliment}>–ù–∞–∂–º–∏ —Å—é–¥–∞ ‚ù§</Button>
      )}
      {finished && showFinalButton && (
        <Button onClick={goToBestCompliment} className="mt-4">
          –ê —Ç–µ–ø–µ—Ä—å –µ—â–µ —Ä–∞–∑ –Ω–∞–∂–º–∏))
        </Button>
      )}
    </div>
  );
};

export default ComplimentGenerator;
